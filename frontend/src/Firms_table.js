// useState ‚Äî –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
// useEffect ‚Äî –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ setView
import React, { useState, useEffect } from 'react';

import { AgGridReact } from 'ag-grid-react';  // –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç AG Grid –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
import { ModuleRegistry, AllCommunityModule } from 'ag-grid-community'; // –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π AG Grid

// —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
import 'ag-grid-community/styles/ag-theme-quartz.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';

import './custom-grid.css';  // –º–æ–π css
import translator from './labels_ru';  // –ù–∞–¥–ø–∏—Å–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π –¥–ª—è ag-grid –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ AG Grid
ModuleRegistry.registerModules([AllCommunityModule]);


function Firms_table({ onBack }) { 
  /* —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –≤—Å—ë, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ –Ω–µ—ë, –æ–ø–∏—Å—ã–≤–∞–µ—Ç, 
  –∫–∞–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —á—Ç–æ –æ–Ω –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å */

  const [firms, setFirms] = useState([]);  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  // firms ‚Äî –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∏—Ä–º–∞—Ö
  // setFirms - —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
  // useState([]) - –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏—Ä–º—ã
  const [showForm, setShowForm] = useState(false);  
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
  const [newFirm, setNewFirm] = useState({ reg: '', firm_name: '', cod_dc: '',
     it_manager: '', serv_manager: '', additional_information: '', comment_1: ''
     
   });

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö (–º—ã –º–µ–Ω—è–µ–º —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∏ useEffect —Ä–µ–∞–≥–∏—Ä—É–µ—Ç)
  const [refreshKey, setRefreshKey] = useState(0);

  

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
  // useEffect ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ö—É–∫ React, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–±–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  useEffect(() => 
    {   
    fetch('http://localhost:5001/api/firms')  
      /* fetch ‚Äî —ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
      GET-–∑–∞–ø—Ä–æ—Å –ø–æ –∞–¥—Ä–µ—Å—É ... */
      .then(response => response.json()) // –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª HTTP-–æ—Ç–≤–µ—Ç => –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ json 
      .then(data => { setFirms(data);  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ firms, –≤—ã–∑—ã–≤–∞—è setFirms(data)
      })  
      .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —Ñ–∏—Ä–º:', error));
    }, [refreshKey] // [] - –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  ); 
  
  
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è —Ñ–æ—Ä–º—ã –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏
  // –ü–æ–ª—É—á–∞–µ—Ç –∏–º—è –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ª—é–±–æ–≥–æ –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ–ª–µ –≤ –æ–±—ä–µ–∫—Ç–µ newFirm
  const handleInputChange = (e) => {
      const { name, value } = e.target;
      setNewFirm(prev => ({ ...prev, [name]: value }));
    };    
   
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
  const handleSave = async () => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã (trim() - —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ)
    if (!newFirm.reg.trim() || !newFirm.firm_name.trim() || !newFirm.cod_dc.trim() ||
      !newFirm.it_manager.trim() || !newFirm.serv_manager.trim()
      )
        { alert('–í–Ω–∏–º–∞–Ω–∏–µ! –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è!');
        return; // –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å 
      }

      try {
        const response = await fetch('http://127.0.0.1:5001/api/add_firm', {
          method: 'POST', // –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
          headers: {
            'Content-Type': 'application/json' //  –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ–º json
          }, body: JSON.stringify(newFirm) // –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç newFirm –≤ JSON‚Äë—Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        });

        if (!response.ok) {
          /* –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞.. response.ok ‚Äî –±—É–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
                          true –µ—Å–ª–∏ –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ 200‚Äì299.
                          false –µ—Å–ª–∏ —á—Ç–æ‚Äë—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 400, 500)
          */
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏');
        } else {
          console.log('–ö–æ–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
          setShowForm(false);  // —Å–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
          setNewFirm({ reg: '', firm_name: '', cod_dc: '', it_manager: '', 
            serv_manager: '', additional_information: '', comment_1: '' }); // –æ—á–∏—â–∞–µ–º –ø–æ–ª—è
          setRefreshKey(old => old + 1); // –∏–∑–º–µ–Ω—è–µ–º –∫–ª—é—á, —á—Ç–æ–±—ã useEffect —Å–Ω–æ–≤–∞ –∑–∞–≥—Ä—É–∑–∏–ª –¥–∞–Ω–Ω—ã–µ
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
      }
    };


  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è AG Grid
    // field - –ö–ª—é—á –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –¥–∞–Ω–Ω—ã—Ö 
    // editable - –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
    // sortable	- –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
    // filter -	–í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä
    // resizable	–†–∞–∑—Ä–µ—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—è—Ç—å —à–∏—Ä–∏–Ω—É —ç—Ç–æ–π –∫–æ–ª–æ–Ω–∫–∏
    const columnDefs = [
      { headerName: '–†–µ–≥', field: 'reg', editable: false, sortable: false, resizable: true, filter: false, width: 90 },  
      { headerName: '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', field: 'firm_name', editable: false, sortable: true, filter: true, resizable: true, width: 170 },
      { headerName: '–ö–æ–¥ –î–¶', field: 'cod_dc', editable: false, sortable: false, filter: false, resizable: true, width: 85 },
      { headerName: '–¢–µ—Ö. —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', field: 'it_manager', editable: false, sortable: true, filter: true, resizable: true, width: 110 },
      { headerName: '–ú–µ–Ω–µ–¥–∂–µ—Ä', field: 'serv_manager', editable: false, sortable: true, filter: true, resizable: true, width: 110 },
      { headerName: '–î–∞—Ç–∞ –æ–±–Ω.', field: 'update_data', editable: false, sortable: false, filter: false, resizable: true, width: 100 },  
      { headerName: '–ò–Ω—Ü–∏–¥–µ–Ω—Ç 1', field: 'problem_1', editable: false, sortable: false, filter: false, resizable: true, width: 112 },
      { headerName: '# 1', field: 'description_1', editable: false, sortable: false, filter: false, resizable: true, width: 55 },
      { headerName: '–ò–Ω—Ü–∏–¥–µ–Ω—Ç 2', field: 'problem_2', editable: false, sortable: false, filter: false, resizable: true, width: 115 },
      { headerName: '# 2', field: 'description_2', editable: false, sortable: false, filter: false, resizable: true, width: 55 },
      { headerName: '–ò–Ω—Ü–∏–¥–µ–Ω—Ç 3', field: 'problem_3', editable: false, sortable: false, filter: false, resizable: true, width: 100 },
      { headerName: '# 3', field: 'description_3', editable: false, sortable: false, filter: false, resizable: true, width: 55 },
      { headerName: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', field: 'additional_information', editable: true, sortable: false, filter: false, resizable: true, width: 100 },
      { headerName: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', field: 'comment_1', editable: false, sortable: false, filter: false, resizable: true, width: 112 },
      { headerName: '–î–µ–π—Å—Ç–≤–∏—è', editable: false, sortable: false, filter: false, resizable: true, width: 80, 
                       cellRenderer: (params) => (
                       <button onClick={() => handleDelete(params.data.id)}>‚ùå</button>
                     )
      }        
    ];

    // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
    const handleDelete = async (id) => {
      if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é?')) {
          return;
      }
      try {
        const response = await fetch(`http://127.0.0.1:5001/api/delete_firm/${id}`, {
        method: 'DELETE'
      });
    
        if (response.ok) {
          console.log('–ö–æ–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
          setRefreshKey(old => old + 1); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        } 
        else {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏');
        }
      } catch (error) { console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error); }
    };


    // –†–µ–Ω–¥–µ—Ä - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    return (
      <div>
        <h3>&nbsp;&nbsp;–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ - —Ä–µ–µ—Å—Ç—Ä</h3>
        <div style={{ display: 'flex', gap: '22px', alignItems: 'center' }}>
          <button onClick={onBack} style={{ fontSize: '22px', marginLeft: '10px'}}>üè†</button>
          <button onClick={() => setShowForm(true)} style={{ fontSize: '22px' }}>‚ûï</button>   
        </div>
        
        {/* –§–æ—Ä–º–∞ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ showForm=true) */}
        {/* showForm && - –ï—Å–ª–∏ —Ä–∞–≤–Ω–æ true, —Ç–æ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —Å–∫–æ–±–∫–∞—Ö*/}
        {/* onChange={handleInputChange} - —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–ª–µ. –û–Ω–∞ –æ–±–Ω–æ–≤–∏—Ç newFirm*/}
        {showForm && (
          <div style={{ marginTop: '10px', marginBottom: '10px', marginLeft: '10px' }}>
            <input
              name="reg"
              placeholder="–†–µ–≥ ‚Ññ"
              value={newFirm.reg || ''}
              onChange={handleInputChange}
            />  
            <input
              name="firm_name"
              placeholder="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
              value={newFirm.firm_name || ''}
              onChange={handleInputChange}
            />
            <input
              name="cod_dc"
              placeholder="–ö–æ–¥ –î–¶"
              value={newFirm.cod_dc || ''}
              onChange={handleInputChange}
            />
            <input
              name="it_manager"
              placeholder="–¢–µ—Ö. —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
              value={newFirm.it_manager || ''}
              onChange={handleInputChange}
            />
            <input
              name="serv_manager"
              placeholder="–ú–µ–Ω–µ–¥–∂–µ—Ä"
              value={newFirm.serv_manager || ''}
              onChange={handleInputChange}
            />
            <input
              name="additional_information"
              placeholder="–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
              value={newFirm.additional_information || ''}
              onChange={handleInputChange}
            />
            <input
              name="comment_1"
              placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
              value={newFirm.comment_1 || ''}
              onChange={handleInputChange}
            />

            <button onClick={handleSave} style={{ marginRight: '10px' }}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            <button onClick={() => setShowForm(false)}>–û—Ç–º–µ–Ω–∞</button>
          </div>
        )}
        

        {/* –¢–∞–±–ª–∏—Ü–∞ */}
        {/* rowData={firms} - –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ */}
        {/*  ∆í={columnDefs} - –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–µ –º–∞—Å—Å–∏–≤ –æ–ø–∏—Å–∞–Ω–∏–π –∫–æ–ª–æ–Ω–æ–∫*/}
        <div className="ag-theme-quartz" style={{ height: 500, width: '100%' }}>
            <AgGridReact
              rowData={firms}  
              columnDefs={columnDefs} 
              
              localeText={translator}
                                  
            />
        </div>
      </div>          
    )




}
       
export default Firms_table; // –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
   